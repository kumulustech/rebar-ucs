---
- hosts: install
  become: true
  become_user: root
  environment:
    https_proxy: https://{{ proxy_server }}
    http_proxy: https://{{ proxy_server }}
    HTTPS_PROXY: https://{{ proxy_server }}
    HTTP_PROXY: https://{{ proxy_server }}
  tasks:
  - include_vars: ./global.yml
  - include_vars: ./physical.yml
  
  - name: install epel-release
    yum: name=epel-release state=installed
  - name: install prerequisites
    yum: name={{item}} state=latest
    with_items:
    - jq
    - git
    - vim
    - htop
    - python-netaddr
    - cobbler
    - cobbler-web
    - pykickstart
    - fence-agents

  - name: update cobbler settings file
    template: src=templates/cobbler_settings.j2 dest=/etc/cobbler/settings
  - name: update cobbler dhcp.template file
    template: src=templates/dhcp_template.j2 dest=/etc/cobbler/dhcp.template
  - name: upload dnsmasq.template
    template: src=templates/dnsmasq_template.j2 dest=/etc/cobbler/dnsmasq.template
  - name: upload modules.conf
    template: src=templates/modules_conf.j2 dest=/etc/cobbler/modules.conf
  - name: update initd tftp state
    lineinfile: dest=/etc/xinetd.d/tftp regexp='^.*disable.*' line='        disable                 = no'

# may need to set selinux params
# setsebool -P httpd_serve_cobbler_files true
# setsebool -P httpd_can_network_connect true
  - name: restart cobbler
    system: name={{item}} state=restarted enabled=yes
    with_items:
    - cobblerd
    - httpd

  - name: environment setup
    template: src=templates/environment.j2 dest=/etc/environment

  - name: create docker repo
    copy: src=files/docker.repo dest=/etc/yum.repos.d/docker.repo
  - name: install docker
    yum: name=docker-engine state=latest
  - name: add proxy environment to docker
    lineinfile: dest=/usr/lib/systemd/system/docker.service insertafter='.*Service.*' line='Environment={{item}}'
    with_items:
    - 'https_proxy=https://{{ proxy_server }}'
    - 'http_proxy=https://{{ proxy_server }}'
    - 'HTTPS_PROXY=https://{{ proxy_server }}'
    - 'HTTP_PROXY=https://{{ proxy_server }}'
    - 'no_proxy={{ proxy_server }}'
    - 'NO_PROXY={{ proxy_server }}'
    - 'MountFlags=shared'
     
  - name: daemon-reload systemctl
    command: systemctl daemon-reload
  - name: enable docker
    service: name=docker state=restarted enabled=yes
  - name: install docker-compose
    shell: curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    args:
      creates: /usr/local/bin/docker-compose
  - name: ensure docker-compose is executable
    file: dest=/usr/local/bin/docker-compose mode=0755

  - name: look for private keys
    find: path=/root/.ssh pattern='id_rsa.*'
    register: root_priv
  - name: create labf ssh pub/priv keys
    command: ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''
    when: root_priv.matched == 0
  - name: get labf ssh private key
    fetch: src=/root/.ssh/id_rsa dest=files/id_rsa flat=yes
  - name: get labf ssh public key
    fetch: src=/root/.ssh/id_rsa.pub dest=files/id_rsa.pub flat=yes
  - name: add public key to authorized keys
    authorized_key: 
      user: root
      key:  "{{ lookup('file', 'files/id_rsa.pub') }}"  
